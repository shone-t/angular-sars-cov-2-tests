{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nlet ErrorInterceptor = class ErrorInterceptor {\n  constructor(accountService) {\n    this.accountService = accountService;\n  }\n\n  intercept(request, next) {\n    return next.handle(request).pipe(catchError(err => {\n      var _a;\n\n      if ([401, 403].includes(err.status) && this.accountService.userValue) {\n        // auto logout if 401 or 403 response returned from api\n        this.accountService.logout();\n      }\n\n      const error = ((_a = err.error) === null || _a === void 0 ? void 0 : _a.message) || err.statusText;\n      console.error(err);\n      return throwError(error);\n    }));\n  }\n\n};\nErrorInterceptor = __decorate([Injectable()], ErrorInterceptor);\nexport { ErrorInterceptor };","map":null,"metadata":{},"sourceType":"module"}